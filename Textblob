# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15QQLAYpq07VnVc2usemwzFQQUreJI6sE
"""

#!pip install -U textblob
!pip install vaderSentiment
#!python -m textblob.download_corpora
#!python -m spacy download en_core_web_sm
#!pip install tabulate
#!pip install spacy

import spacy
import tabulate
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from os import path
import seaborn as sns
from textblob import TextBlob
from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer
from sklearn.metrics import confusion_matrix, precision_score, precision_recall_curve, recall_score, f1_score, accuracy_score
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.linear_model import LogisticRegression

from google.colab import files
uploaded = files.upload()

df = pd.read_csv('All Airlines.csv')

df

df.info

df.dtypes

df['review_date'] = pd.to_datetime(df['review_date'])

df2= df[['airline','review_date','customer_review']]
df2

df2.dtypes

import re


# Remove punctuation
df2['customer_review'] = df2['customer_review'].map(lambda x: re.sub('[,\.!?|✅]', '', str(x)))

# Convert the titles to lowercase
df2['customer_review'] = df2['customer_review'].map(lambda x: str(x).lower())

def sentiment_analysis(data):
 def getSubjectivity(text):
   return TextBlob(text).sentiment.subjectivity
  
 #Create a function to get the polarity
 def getPolarity(text):
   return TextBlob(text).sentiment.polarity
  
 #Create two new columns ‘Subjectivity’ & ‘Polarity’
 data['TextBlob_Subjectivity'] = data['customer_review'].apply(getSubjectivity)
 data['TextBlob_Polarity'] = data['customer_review'].apply(getPolarity)
 def getAnalysis(score):
  if score < 0:
    return 'Negative'
  elif score >=0 and score<0.15:
    return 'Neutral'
  else:
    return 'Positive'
 data['TextBlob_Analysis'] = data['TextBlob_Polarity'].apply(getAnalysis )
 return data

sentiment_analysis(df2)

df['recommended'].hist()

df['overall'].hist()

plt.rcParams["figure.figsize"] = [7.50, 3.50]
plt.rcParams["figure.autolayout"] = True
df2['TextBlob_Analysis'].hist()

plt.title("Sentiment Frequency")

plt.show()

df_before = df2[df2['review_date']< '2020-01-01']
df_during = df2.loc[(df2['review_date'] >= '2020-01-01') & (df2['review_date'] < '2021-12-27')]
df_post = df2[df2['review_date']>='2021-12-27']

df_before['TextBlob_Analysis'].value_counts().plot(kind='pie',autopct='%1.0f%%', title = 'Before Covid')

df_during['TextBlob_Analysis'].value_counts().plot(kind='pie',autopct='%1.0f%%', title = 'During Covid')

df_post['TextBlob_Analysis'].value_counts().plot(kind='pie',autopct='%1.0f%%', title = 'Post Covid')